{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2022-12-22T00:42:56.114841+00:00",
  "repo": "bencebeky/metadata",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOHkxoaM46vAPw",
      "title": "Add some updates for the METADATA HTTP/2 section.",
      "url": "https://github.com/bencebeky/metadata/pull/1",
      "state": "MERGED",
      "author": "diannahu",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Updates include:\r\n  - Meaning of the END_METADATA flag and multiple METADATA frames.\r\n  - Ability to interleave METADATA frames with other frames.\r\n  - Some detail on stream state (transitioning from \"idle\").\r\n  - Minor editorial tweaks.\r\n\r\nUpdates are based on:\r\nhttps://docs.google.com/document/d/1DsPjl6qWxhcF28vzJey0xQJ2O2eRKHv7CBXt3EZyDjc/edit.",
      "createdAt": "2022-07-01T23:06:08Z",
      "updatedAt": "2022-07-06T02:58:11Z",
      "baseRepository": "bencebeky/metadata",
      "baseRefName": "main",
      "baseRefOid": "04f4448624c0ffde008e5832cf0b00a720b05b01",
      "headRepository": "diannahu/metadata",
      "headRefName": "http2section",
      "headRefOid": "cc388311999eb5c6ff85beabf0862757cbab0b52",
      "closedAt": "2022-07-02T19:21:45Z",
      "mergedAt": "2022-07-02T19:21:44Z",
      "mergedBy": "bencebeky",
      "mergeCommit": {
        "oid": "964c74e664d59f8291d1867c3b2cfa8206e12913"
      },
      "comments": [
        {
          "author": "birenroy",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, this is much better!",
          "createdAt": "2022-07-06T02:58:11Z",
          "updatedAt": "2022-07-06T02:58:11Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOHkxoaM49M3ZO",
          "commit": {
            "abbreviatedOid": "cc38831"
          },
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Thank you for the improvements!",
          "createdAt": "2022-07-02T19:21:11Z",
          "updatedAt": "2022-07-02T19:21:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 2,
      "id": "PR_kwDOHkxoaM46406n",
      "title": "Add motivating examples for METADATA in the intro.",
      "url": "https://github.com/bencebeky/metadata/pull/2",
      "state": "MERGED",
      "author": "diannahu",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-07-06T00:05:29Z",
      "updatedAt": "2022-07-06T02:33:32Z",
      "baseRepository": "bencebeky/metadata",
      "baseRefName": "main",
      "baseRefOid": "964c74e664d59f8291d1867c3b2cfa8206e12913",
      "headRepository": "diannahu/metadata",
      "headRefName": "examples",
      "headRefOid": "a260a779b67b8169d57d7407d52c9edd6c9bb1d8",
      "closedAt": "2022-07-06T02:33:32Z",
      "mergedAt": "2022-07-06T02:33:32Z",
      "mergedBy": "birenroy",
      "mergeCommit": {
        "oid": "843c4264d29abdf3e81e5fe823f41f107b115b31"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOHkxoaM49W7Rh",
          "commit": {
            "abbreviatedOid": "a260a77"
          },
          "author": "birenroy",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good, thank you Dianna!",
          "createdAt": "2022-07-06T02:33:11Z",
          "updatedAt": "2022-07-06T02:33:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 3,
      "id": "PR_kwDOHkxoaM465RWj",
      "title": "Adds a term for encoded metadata key-value pairs.",
      "url": "https://github.com/bencebeky/metadata/pull/3",
      "state": "MERGED",
      "author": "birenroy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I also removed the TODO associated with this editorial item.",
      "createdAt": "2022-07-06T02:51:25Z",
      "updatedAt": "2022-11-16T19:19:52Z",
      "baseRepository": "bencebeky/metadata",
      "baseRefName": "main",
      "baseRefOid": "843c4264d29abdf3e81e5fe823f41f107b115b31",
      "headRepository": "birenroy/metadata",
      "headRefName": "metadata-block",
      "headRefOid": "32980f081d1e27c13c740bf6bac8c0184f19ded8",
      "closedAt": "2022-07-06T13:11:57Z",
      "mergedAt": "2022-07-06T13:11:57Z",
      "mergedBy": "bencebeky",
      "mergeCommit": {
        "oid": "525d3425033c77ed9c5ef4e57d06ddf468d37657"
      },
      "comments": [
        {
          "author": "birenroy",
          "authorAssociation": "COLLABORATOR",
          "body": "@bencebeky @diannahu FYI",
          "createdAt": "2022-07-06T02:52:21Z",
          "updatedAt": "2022-07-06T02:52:21Z"
        },
        {
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "body": "Thank you, this is great!",
          "createdAt": "2022-07-06T13:12:03Z",
          "updatedAt": "2022-07-06T13:12:03Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 4,
      "id": "PR_kwDOHkxoaM4684s6",
      "title": "Improvements",
      "url": "https://github.com/bencebeky/metadata/pull/4",
      "state": "MERGED",
      "author": "bencebeky",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Add emphasis to MAY/MUST/SHOULD.\r\nClarify interleaving frame type and stream requirements.\r\nClarify multiple and incomplete metadata blocks.\r\n\r\nThree separate commits for easier review.",
      "createdAt": "2022-07-06T16:33:21Z",
      "updatedAt": "2022-07-07T15:25:29Z",
      "baseRepository": "bencebeky/metadata",
      "baseRefName": "main",
      "baseRefOid": "c746bdb07336fcf0227a61b3127efc58664cff42",
      "headRepository": "bencebeky/metadata",
      "headRefName": "frames",
      "headRefOid": "fb40da7751517ffd9eaad8e61a225bc1de12549d",
      "closedAt": "2022-07-07T15:25:26Z",
      "mergedAt": "2022-07-07T15:25:26Z",
      "mergedBy": "bencebeky",
      "mergeCommit": {
        "oid": "4b3511438cd6899bf8456c34098fb004bb4b4d6b"
      },
      "comments": [
        {
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "body": "Thank you both for the thorough review.  I'm merging this so that it shows up in tip of tree, but feel free to let me know if you can think of further improvements.",
          "createdAt": "2022-07-07T15:25:22Z",
          "updatedAt": "2022-07-07T15:25:22Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOHkxoaM49bf_1",
          "commit": {
            "abbreviatedOid": "80f1e3f"
          },
          "author": "birenroy",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-06T19:49:19Z",
          "updatedAt": "2022-07-06T19:50:57Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "This might be very nitpicky, but I would use some verb other than \"carry\". Maybe transmit, send, or transfer?",
              "createdAt": "2022-07-06T19:49:19Z",
              "updatedAt": "2022-07-06T19:50:57Z"
            },
            {
              "originalPosition": 53,
              "body": "Accidental extraneous \")\"?",
              "createdAt": "2022-07-06T19:50:19Z",
              "updatedAt": "2022-07-06T19:50:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHkxoaM49cIYX",
          "commit": {
            "abbreviatedOid": "80f1e3f"
          },
          "author": "diannahu",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Excellent improvements! My comments are only nits/optional.",
          "createdAt": "2022-07-06T22:36:51Z",
          "updatedAt": "2022-07-06T22:50:13Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "optional:\r\n\r\n\"..., among which only the last one carries the END_METADATA flag.\"\r\n\r\n-->\r\n\r\n\"..., the last of which has the END_METADATA flag set.\"",
              "createdAt": "2022-07-06T22:36:51Z",
              "updatedAt": "2022-07-06T22:50:13Z"
            },
            {
              "originalPosition": 43,
              "body": "optional:\r\n\r\n\"..., then the metadata block fragment carried by the last run of METADATA frames without the END_METADATA flag\"\r\n\r\n-->\r\n\r\n\"..., then that incomplete metadata block\"\r\n\r\n(I think this shortening is okay because the first sentence defines a metadata block very clearly. Nice!)",
              "createdAt": "2022-07-06T22:42:13Z",
              "updatedAt": "2022-07-06T22:50:13Z"
            },
            {
              "originalPosition": 44,
              "body": "uber-nit: \"_SHOULD_ not\" --> \"_SHOULD NOT_\"\r\n\r\noptional: \"previously transferred\" --> \"previous\"",
              "createdAt": "2022-07-06T22:43:49Z",
              "updatedAt": "2022-07-06T22:50:13Z"
            },
            {
              "originalPosition": 53,
              "body": "uber-nit: \"_MUST_ not\" --> \"_MUST NOT_\"",
              "createdAt": "2022-07-06T22:45:57Z",
              "updatedAt": "2022-07-06T22:50:13Z"
            },
            {
              "originalPosition": 62,
              "body": "uber-nit: \"_MUST_ not\" --> \"_MUST NOT_\"",
              "createdAt": "2022-07-06T22:46:13Z",
              "updatedAt": "2022-07-06T22:50:13Z"
            },
            {
              "originalPosition": 76,
              "body": "uber-nit: \"_MUST_ not\" --> \"_MUST NOT_\"",
              "createdAt": "2022-07-06T22:46:24Z",
              "updatedAt": "2022-07-06T22:50:13Z"
            },
            {
              "originalPosition": 77,
              "body": "uber-nit: \"_MUST_ not\" --> \"_MUST NOT_\"",
              "createdAt": "2022-07-06T22:46:36Z",
              "updatedAt": "2022-07-06T22:50:13Z"
            },
            {
              "originalPosition": 84,
              "body": "uber-nit: \"_SHOULD_ NOT\" --> \"_SHOULD NOT_\"",
              "createdAt": "2022-07-06T22:47:00Z",
              "updatedAt": "2022-07-06T22:50:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHkxoaM49f3zQ",
          "commit": {
            "abbreviatedOid": "80f1e3f"
          },
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-07T15:23:04Z",
          "updatedAt": "2022-07-07T15:23:04Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Thanks for the suggestion.  I agree that the original wording has room for improvement.  How about \"an endpoint MAY transmit\" instead of the connection transmitting?  I'm also changing \"any number\" to \"multiple\", and adding \"on the same stream\", since the point we are actually trying to convey here is that multiple metadata blocks are allowed.  And changing \"connection or stream\" to \"stream\", since metadata blocks pertaining to the entire connection are also transmitted on a stream (stream 0 in that case).",
              "createdAt": "2022-07-07T15:23:04Z",
              "updatedAt": "2022-07-07T15:23:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHkxoaM49f305",
          "commit": {
            "abbreviatedOid": "80f1e3f"
          },
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-07T15:23:08Z",
          "updatedAt": "2022-07-07T15:23:11Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Oops.  Good catch!  Fixed both.",
              "createdAt": "2022-07-07T15:23:08Z",
              "updatedAt": "2022-07-07T15:23:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHkxoaM49f34U",
          "commit": {
            "abbreviatedOid": "80f1e3f"
          },
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-07T15:23:16Z",
          "updatedAt": "2022-07-07T15:23:16Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "Done, except I added \"_only_ the last of which\" to make it explicit that the rest of the frames must not have the flag set.  This might still has room for improvement, let me know if you have any further suggestions.",
              "createdAt": "2022-07-07T15:23:16Z",
              "updatedAt": "2022-07-07T15:23:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHkxoaM49f353",
          "commit": {
            "abbreviatedOid": "80f1e3f"
          },
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-07T15:23:20Z",
          "updatedAt": "2022-07-07T15:23:20Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "Done, expect \"the\" instead of \"that\" seems to flow a little better to me, without introducing ambiguity.",
              "createdAt": "2022-07-07T15:23:20Z",
              "updatedAt": "2022-07-07T15:23:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHkxoaM49f376",
          "commit": {
            "abbreviatedOid": "80f1e3f"
          },
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-07T15:23:25Z",
          "updatedAt": "2022-07-07T15:23:26Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Done.  Also, on second thought, I'm removing the word \"complete\", because it does not add much value.",
              "createdAt": "2022-07-07T15:23:25Z",
              "updatedAt": "2022-07-07T15:23:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHkxoaM49f3-W",
          "commit": {
            "abbreviatedOid": "80f1e3f"
          },
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-07T15:23:31Z",
          "updatedAt": "2022-07-07T15:23:31Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "Done.",
              "createdAt": "2022-07-07T15:23:31Z",
              "updatedAt": "2022-07-07T15:23:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHkxoaM49f4AD",
          "commit": {
            "abbreviatedOid": "80f1e3f"
          },
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-07T15:23:35Z",
          "updatedAt": "2022-07-07T15:23:36Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "Done.",
              "createdAt": "2022-07-07T15:23:35Z",
              "updatedAt": "2022-07-07T15:23:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHkxoaM49f4Ap",
          "commit": {
            "abbreviatedOid": "80f1e3f"
          },
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-07T15:23:37Z",
          "updatedAt": "2022-07-07T15:23:37Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "Done.",
              "createdAt": "2022-07-07T15:23:37Z",
              "updatedAt": "2022-07-07T15:23:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHkxoaM49f4D3",
          "commit": {
            "abbreviatedOid": "80f1e3f"
          },
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-07T15:23:44Z",
          "updatedAt": "2022-07-07T15:23:44Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "Done.",
              "createdAt": "2022-07-07T15:23:44Z",
              "updatedAt": "2022-07-07T15:23:45Z"
            }
          ]
        }
      ]
    },
    {
      "number": 5,
      "id": "PR_kwDOHkxoaM469Oom",
      "title": "Expand Abstract and add Acknowledgements.",
      "url": "https://github.com/bencebeky/metadata/pull/5",
      "state": "MERGED",
      "author": "bencebeky",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-07-06T18:15:45Z",
      "updatedAt": "2022-07-07T14:59:46Z",
      "baseRepository": "bencebeky/metadata",
      "baseRefName": "main",
      "baseRefOid": "525d3425033c77ed9c5ef4e57d06ddf468d37657",
      "headRepository": "bencebeky/metadata",
      "headRefName": "abstract",
      "headRefOid": "5cf0a352878dfd65f71c954cbf4986329e1ddc78",
      "closedAt": "2022-07-07T14:59:44Z",
      "mergedAt": "2022-07-07T14:59:44Z",
      "mergedBy": "bencebeky",
      "mergeCommit": {
        "oid": "c746bdb07336fcf0227a61b3127efc58664cff42"
      },
      "comments": [
        {
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "body": "Thank you both for the review.",
          "createdAt": "2022-07-07T14:59:39Z",
          "updatedAt": "2022-07-07T14:59:39Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOHkxoaM49bglr",
          "commit": {
            "abbreviatedOid": "f0696b6"
          },
          "author": "birenroy",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-06T19:51:37Z",
          "updatedAt": "2022-07-06T19:51:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOHkxoaM49cKpc",
          "commit": {
            "abbreviatedOid": "f0696b6"
          },
          "author": "diannahu",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": ":)",
          "createdAt": "2022-07-06T22:51:19Z",
          "updatedAt": "2022-07-06T22:56:53Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": ":)",
              "createdAt": "2022-07-06T22:51:20Z",
              "updatedAt": "2022-07-06T22:56:53Z"
            },
            {
              "originalPosition": 6,
              "body": "uber-nit: \"entire connection or to a specific\" (\"to\" for grammatical parallelism).\r\n\r\nmaybe better: \"refers to either the entire connection or a specific stream\" (also has parallelism).",
              "createdAt": "2022-07-06T22:52:01Z",
              "updatedAt": "2022-07-06T22:56:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHkxoaM49fuTd",
          "commit": {
            "abbreviatedOid": "f0696b6"
          },
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-07T14:58:28Z",
          "updatedAt": "2022-07-07T14:58:29Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Oh nice, I always liked parallelism, and now I learned its name!",
              "createdAt": "2022-07-07T14:58:28Z",
              "updatedAt": "2022-07-07T14:58:29Z"
            }
          ]
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDOHkxoaM47Kh1_",
      "title": "Slightly improved wording of HTTP/2 metadata frame payload description.",
      "url": "https://github.com/bencebeky/metadata/pull/6",
      "state": "MERGED",
      "author": "birenroy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "@bencebeky @diannahu Please take a look!",
      "createdAt": "2022-07-11T03:26:12Z",
      "updatedAt": "2022-11-16T19:20:11Z",
      "baseRepository": "bencebeky/metadata",
      "baseRefName": "main",
      "baseRefOid": "4b3511438cd6899bf8456c34098fb004bb4b4d6b",
      "headRepository": "birenroy/metadata",
      "headRefName": "wordsmithing",
      "headRefOid": "896d13c5220eb5089b7f4dffe59f46438a24b48a",
      "closedAt": "2022-07-11T11:50:27Z",
      "mergedAt": "2022-07-11T11:50:26Z",
      "mergedBy": "bencebeky",
      "mergeCommit": {
        "oid": "0f8de90e0972c98936c9d21300ff5d9d8cbc681b"
      },
      "comments": [
        {
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "body": "Thank you for the improvements!",
          "createdAt": "2022-07-11T11:50:22Z",
          "updatedAt": "2022-07-11T11:50:22Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 7,
      "id": "PR_kwDOHkxoaM47NVdT",
      "title": "Added initial security considerations.",
      "url": "https://github.com/bencebeky/metadata/pull/7",
      "state": "MERGED",
      "author": "birenroy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "First pass at the section on security considerations.",
      "createdAt": "2022-07-11T17:10:49Z",
      "updatedAt": "2022-11-16T19:20:08Z",
      "baseRepository": "bencebeky/metadata",
      "baseRefName": "main",
      "baseRefOid": "0f8de90e0972c98936c9d21300ff5d9d8cbc681b",
      "headRepository": "birenroy/metadata",
      "headRefName": "security",
      "headRefOid": "32f9b93b93d61b66a40a4afa106db74c2b6c1fce",
      "closedAt": "2022-07-11T18:00:41Z",
      "mergedAt": "2022-07-11T18:00:41Z",
      "mergedBy": "bencebeky",
      "mergeCommit": {
        "oid": "1e0f10ffb842e2eb79d31bbedfbcfcffe1678114"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOHkxoaM49rBdK",
          "commit": {
            "abbreviatedOid": "2edccc7"
          },
          "author": "diannahu",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks great!",
          "createdAt": "2022-07-11T17:20:42Z",
          "updatedAt": "2022-07-11T17:20:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOHkxoaM49rJsu",
          "commit": {
            "abbreviatedOid": "2edccc7"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-11T17:48:57Z",
          "updatedAt": "2022-07-11T17:51:05Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nthat change the dynamic table inside METADATA frames; any METADATA frame with such representations _SHOULD_\r\n```",
              "createdAt": "2022-07-11T17:48:57Z",
              "updatedAt": "2022-07-11T17:51:06Z"
            },
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nreference the dynamic table inside METADATA frames; any METADATA frame with such representations _SHOULD_\r\n```",
              "createdAt": "2022-07-11T17:49:15Z",
              "updatedAt": "2022-07-11T17:51:06Z"
            },
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nbe treated as a connection error.  Therefore the Required Insert Count MUST be zero,\r\n```",
              "createdAt": "2022-07-11T17:49:35Z",
              "updatedAt": "2022-07-11T17:51:06Z"
            },
            {
              "originalPosition": 39,
              "body": "RFC 9113 states that SETTINGS_MAX_FRAME_SIZE applies to all frames. I read that as applying to extension frames as well.",
              "createdAt": "2022-07-11T17:51:01Z",
              "updatedAt": "2022-07-11T17:51:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHkxoaM49rNcB",
          "commit": {
            "abbreviatedOid": "32f9b93"
          },
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-11T18:00:12Z",
          "updatedAt": "2022-07-11T18:00:12Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "This is a good point.  However, RFC 9113 does not explicitly disallow extensions from modifying the protocol is such a way that new frames are exempt from SETTINGS_MAX_FRAME_SIZE, neither in Section 4.2 nor in Section 5.5.  One might interpret Section 5.5 as \"all bets are off\" regarding extensions as long as interoperability with existing compliant implementations is not compromised.  So there might be some room for interpretation here.\r\n\r\nI think it is worth making it explicit here that METADATA frames are subject to SETTINGS_MAX_FRAME_SIZE.  However, I suggest softening up the language and not making a statement about what RFC 9113 states in this regard.",
              "createdAt": "2022-07-11T18:00:12Z",
              "updatedAt": "2022-07-11T18:00:12Z"
            }
          ]
        }
      ]
    },
    {
      "number": 8,
      "id": "PR_kwDOHkxoaM47NiQM",
      "title": "Remove statement about what RFC9113 states about frame payload limit on extension frames.",
      "url": "https://github.com/bencebeky/metadata/pull/8",
      "state": "MERGED",
      "author": "bencebeky",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-07-11T18:09:31Z",
      "updatedAt": "2022-07-11T21:54:51Z",
      "baseRepository": "bencebeky/metadata",
      "baseRefName": "main",
      "baseRefOid": "a2f5cdc28ac9bd6725f912c1b481a9a2c5cd1b77",
      "headRepository": "bencebeky/metadata",
      "headRefName": "frame-limit",
      "headRefOid": "7bfa30764588f30177272ee7382227e5fdaa7d69",
      "closedAt": "2022-07-11T18:26:46Z",
      "mergedAt": "2022-07-11T18:26:46Z",
      "mergedBy": "bencebeky",
      "mergeCommit": {
        "oid": "1473625838d106689754ba487a2a6c56ed31d663"
      },
      "comments": [
        {
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "body": "Thank you both for the review.",
          "createdAt": "2022-07-11T18:26:53Z",
          "updatedAt": "2022-07-11T18:26:53Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOHkxoaM49rRh6",
          "commit": {
            "abbreviatedOid": "7bfa307"
          },
          "author": "birenroy",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM, thank you.",
          "createdAt": "2022-07-11T18:15:41Z",
          "updatedAt": "2022-07-11T18:15:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOHkxoaM49rSl_",
          "commit": {
            "abbreviatedOid": "7bfa307"
          },
          "author": "diannahu",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-11T18:19:50Z",
          "updatedAt": "2022-07-11T18:19:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOHkxoaM47Np5Y",
      "title": "Minor tweaks",
      "url": "https://github.com/bencebeky/metadata/pull/9",
      "state": "MERGED",
      "author": "DavidSchinazi",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-07-11T18:44:13Z",
      "updatedAt": "2022-07-11T19:01:42Z",
      "baseRepository": "bencebeky/metadata",
      "baseRefName": "main",
      "baseRefOid": "1473625838d106689754ba487a2a6c56ed31d663",
      "headRepository": null,
      "headRefName": "initial",
      "headRefOid": "762ef5dec6a07dbc994e8a37e6236298013244b7",
      "closedAt": "2022-07-11T19:01:39Z",
      "mergedAt": "2022-07-11T19:01:39Z",
      "mergedBy": "DavidSchinazi",
      "mergeCommit": {
        "oid": "3bea881f5c9b810f816f9117aadd362f51cea2d7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOHkxoaM49rb79",
          "commit": {
            "abbreviatedOid": "e0287be"
          },
          "author": "birenroy",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Just the one question about the markdown formatting.",
          "createdAt": "2022-07-11T18:54:28Z",
          "updatedAt": "2022-07-11T18:56:36Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "What is the reasoning for the removal of emphasis in the various places here and below? Just editorial taste, or some other criteria?",
              "createdAt": "2022-07-11T18:54:28Z",
              "updatedAt": "2022-07-11T18:56:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHkxoaM49rcuG",
          "commit": {
            "abbreviatedOid": "e0287be"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-11T18:57:28Z",
          "updatedAt": "2022-07-11T18:57:29Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "The tools automatically add emphasis, so we should follow the usual practice to make sure we get the automatic tooling",
              "createdAt": "2022-07-11T18:57:28Z",
              "updatedAt": "2022-07-11T18:57:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOHkxoaM49rc1l",
          "commit": {
            "abbreviatedOid": "e0287be"
          },
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Thank you!",
          "createdAt": "2022-07-11T18:57:54Z",
          "updatedAt": "2022-07-11T18:57:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 10,
      "id": "PR_kwDOHkxoaM479hbG",
      "title": "Makes the hop-by-hop nature of METADATA clear.",
      "url": "https://github.com/bencebeky/metadata/pull/10",
      "state": "MERGED",
      "author": "birenroy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-07-22T16:46:29Z",
      "updatedAt": "2022-11-16T19:20:02Z",
      "baseRepository": "bencebeky/metadata",
      "baseRefName": "main",
      "baseRefOid": "3bea881f5c9b810f816f9117aadd362f51cea2d7",
      "headRepository": "birenroy/metadata",
      "headRefName": "hop-by-hop",
      "headRefOid": "e575174dd95215c0586d8c1ccdffa43eaddf9d53",
      "closedAt": "2022-07-22T18:24:42Z",
      "mergedAt": "2022-07-22T18:24:42Z",
      "mergedBy": "bencebeky",
      "mergeCommit": {
        "oid": "97abfa4ec13a322ac6667df0c99b0f27156272c1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOHkxoaM4-edef",
          "commit": {
            "abbreviatedOid": "e575174"
          },
          "author": "diannahu",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good!",
          "createdAt": "2022-07-22T16:55:29Z",
          "updatedAt": "2022-07-22T16:55:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOHkxoaM4-ehEA",
          "commit": {
            "abbreviatedOid": "e575174"
          },
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-22T17:09:52Z",
          "updatedAt": "2022-07-22T17:09:52Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOHkxoaM4-eiZE",
          "commit": {
            "abbreviatedOid": "e575174"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-22T17:15:34Z",
          "updatedAt": "2022-07-22T17:15:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 11,
      "id": "PR_kwDOHkxoaM4799t0",
      "title": "Removes unnecessary language about sending METADATA before negotiation.",
      "url": "https://github.com/bencebeky/metadata/pull/11",
      "state": "MERGED",
      "author": "birenroy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The original HTTP/2 specification that endpoints may send frames of unknown types, so the language isn't necessary here.\r\n\r\nThis also removes mention of \"forwarding\" METADATA, which we don't need to include.",
      "createdAt": "2022-07-22T19:34:04Z",
      "updatedAt": "2022-11-16T19:19:57Z",
      "baseRepository": "bencebeky/metadata",
      "baseRefName": "main",
      "baseRefOid": "97abfa4ec13a322ac6667df0c99b0f27156272c1",
      "headRepository": "birenroy/metadata",
      "headRefName": "buffer-fix",
      "headRefOid": "89ec4c946831afc5381d824aef6b175001dde2bf",
      "closedAt": "2022-07-25T15:10:42Z",
      "mergedAt": "2022-07-25T15:10:42Z",
      "mergedBy": "bencebeky",
      "mergeCommit": {
        "oid": "b7d65cc07da66ce4d0ff3bab7c8f6ad942eed553"
      },
      "comments": [
        {
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "body": "> Do we want to say something about sending METADATA frames before the endpoint learns that the peer supports them? We know from client-side experience that servers generally do not tolerate unknown frames well.\r\n\r\nI'm merging this PR now as it is a strict improvement.  We can address this comment in a later PR.",
          "createdAt": "2022-07-25T15:10:37Z",
          "updatedAt": "2022-07-25T15:10:37Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOHkxoaM4-fC8D",
          "commit": {
            "abbreviatedOid": "89ec4c9"
          },
          "author": "diannahu",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-22T19:37:09Z",
          "updatedAt": "2022-07-22T19:37:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOHkxoaM4-fHH4",
          "commit": {
            "abbreviatedOid": "89ec4c9"
          },
          "author": "bencebeky",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Do we want to say something about sending METADATA frames before the endpoint learns that the peer supports them?  We know from client-side experience that servers generally do not tolerate unknown frames well.",
          "createdAt": "2022-07-22T19:57:56Z",
          "updatedAt": "2022-07-22T19:57:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOHkxoaM4-fIrm",
          "commit": {
            "abbreviatedOid": "89ec4c9"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-22T20:05:43Z",
          "updatedAt": "2022-07-22T20:05:43Z",
          "comments": []
        }
      ]
    }
  ]
}